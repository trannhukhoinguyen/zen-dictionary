---
import { getSchoolSubSchoolSet } from "~/utils/helpers";
import { conditions } from "~/content.config";
import IconSearch from "~/assets/images/icons/search.svg";
import IconChevronDown from "~/assets/images/icons/chevron-down-select.svg";

const allMasters = await getSchoolSubSchoolSet();
---

<form
	id="form-widget-search"
	action="/masters"
	method="get"
	class="grid grid-cols-1 lg:grid-cols-2 gap-4"
	data-master-set={JSON.stringify(allMasters)}
>
	<div>
		<label class="sr-only" for="school">School</label>
		<div class="grid grid-cols-1">
			<select name="school" id="school" class="appearance-none col-start-1 row-start-1">
				<option value="all">Choose school</option>
				{allMasters.map((master) => <option value={master.school}>{master.school}</option>)}
			</select>
			<IconChevronDown class="icon-chevron-down" />
		</div>
	</div>
	<div>
		<label class="sr-only" for="subSchool">SubSchool</label>
		<div class="grid grid-cols-1">
			<select name="subSchool" id="subSchool" class="appearance-none col-start-1 row-start-1">
				<option value="all">Choose subSchool</option>
			</select>
			<IconChevronDown class="icon-chevron-down" />
		</div>
	</div>
	<div>
		<label class="sr-only" for="condition">Condition</label>
		<div class="grid grid-cols-1">
			<select name="condition" id="condition" class="appearance-none col-start-1 row-start-1">
				<option value="all">Choose condition</option>
				{conditions.map((condition) => <option value={condition}>{condition}</option>)}
			</select>
			<IconChevronDown class="icon-chevron-down" />
		</div>
	</div>

	<div>
		<button type="submit" class="bg-yellow-200 mt-1 rounded-md py-1.5 font-semibold w-full hover:opacity-80 transition">
			<IconSearch class="size-5 -mt-0.5 inline-block" />
			<span>Search</span>
		</button>
	</div>
</form>

<script>
	document.addEventListener("astro:page-load", function () {
		const form = document.getElementById("form-widget-search") as HTMLFormElement;

		if (form) {
			const dataMasterSet = form.getAttribute("data-master-set");
			const allMasters = dataMasterSet ? JSON.parse(dataMasterSet) : [];
			const schoolSelect = document.getElementById("school")! as HTMLSelectElement;
			const subSchoolSelect = document.getElementById("subSchool")! as HTMLSelectElement;

			const populateSubSchools = (selectedSchool: string) => {
				subSchoolSelect.innerHTML = '<option value="all">Choose subSchool</option>';
				allMasters.forEach((master: { school: string; subSchools: string[] }) => {
					if (master.school === selectedSchool) {
						master.subSchools.forEach((subSchool) => {
							subSchoolSelect.innerHTML += `<option value="${subSchool}">${subSchool}</option>`;
						});
					}
				});
			};

			populateSubSchools(schoolSelect.value);

			schoolSelect.addEventListener("change", function () {
				populateSubSchools(schoolSelect.value);
			});
		}
	});
</script>
