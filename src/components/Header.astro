---
import { menuMain } from "~/data/menus";
import IconLogo from "~/assets/images/icons/logo.svg";
const rmTrailingSlash = (path: string): string => {
	return path.endsWith("/") && path.length > 1 ? path.slice(0, path.length - 1) : path;
};

const pathname = rmTrailingSlash(Astro.url.pathname);
---

<header>
	<section class="bg-yellow-200">
		<div class="container py-4 lg:py-8">
			<div class="flex justify-between items-center gap-x-4">
				<a href="/">
					<div class="flex items-center gap-x-2">
						<IconLogo class="h-5 lg:h-8 inline-block" />
						<span class="font-bold text-2xl lg:text-4xl">Hyper<span class="font-normal">Drive</span></span>
					</div>
				</a>

				<nav class="max-lg:hidden" role="navigation" aria-label="Main Navigation">
					<div class="flex lg:gap-x-12 items-center">
						{
							menuMain.map((item) => (
								<div class="relative group">
									<a
										href={item.url}
										class={`border-b-2 transition border-transparent ${pathname === item.url ? "font-bold" : "hover:border-gray-800 font-medium"}`}
										aria-haspopup={item.submenu ? "true" : "false"}
										aria-expanded={item.submenu ? "false" : undefined}
									>
										{item.label}
									</a>
									{item.submenu && (
										<div
											class="absolute top-full -mt-4 pt-4 -left-4 z-50 translate-y-4 w-screen max-w-52 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition duration-300"
											role="menu"
										>
											<div
												class="bg-white rounded-lg ring-1 shadow-md ring-gray-900/5 overflow-hidden"
												role="menu"
												aria-label={`Submenu for ${item.label}`}
											>
												{item.submenu.map((subItem) => (
													<a
														href={subItem.url}
														class={`block px-4 py-3 text-base hover:bg-gray-100 ${
															pathname === subItem.url ? "font-bold" : "font-medium"
														}`}
														role="menuitem"
													>
														{subItem.label}
													</a>
												))}
											</div>
										</div>
									)}
								</div>
							))
						}
						<!--<a href="/contact" class="button button-black ml-8">Contact</a>-->
					</div>
				</nav>
			</div>
		</div>
	</section>
</header>

<nav class="mobile-menu" id="mobile-menu" aria-label="Mobile navigation">
	<ul class="mobile-nav-list">
		<li><a href={'/'} class="mobile-nav-link">Home</a></li>
		<li><a href={'/' + "blog"} class="mobile-nav-link">Blog</a></li>
		<li><a href={'/' + "masters"} class="mobile-nav-link">Masters</a></li>
		<li><a href={'/' + "schools"} class="mobile-nav-link">Schools</a></li>
	</ul>
</nav>

<style>
/* Mobile menu - hidden by default */
.mobile-menu {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: var(--color-background);
	z-index: 99;
	transform: translateX(-100%);
	transition: transform 0.3s ease;
	overflow-y: auto;
	padding-top: calc(var(--grid-unit) * 12);
}

.mobile-menu.active {
	transform: translateX(0);
}
</style>

<script>
	// Hamburger menu functionality
	function initHamburgerMenu() {
		const hamburgerToggle = document.getElementById('hamburger-toggle');
		const mobileMenu = document.getElementById('mobile-menu');
		const body = document.body;

		if (!hamburgerToggle || !mobileMenu) return;

		hamburgerToggle.addEventListener('click', () => {
			const isOpen = mobileMenu.classList.contains('active');

			if (isOpen) {
				mobileMenu.classList.remove('active');
				hamburgerToggle.setAttribute('aria-expanded', 'false');
				body.style.overflow = '';
			} else {
				mobileMenu.classList.add('active');
				hamburgerToggle.setAttribute('aria-expanded', 'true');
				body.style.overflow = 'hidden';
			}
		});

		// Close menu when clicking on a link
		const mobileNavLinks = mobileMenu.querySelectorAll('.mobile-nav-link');
		mobileNavLinks.forEach(link => {
			link.addEventListener('click', () => {
				mobileMenu.classList.remove('active');
				hamburgerToggle.setAttribute('aria-expanded', 'false');
				body.style.overflow = '';
			});
		});

		// Close menu on escape key
		document.addEventListener('keydown', (e) => {
			if (e.key === 'Escape' && mobileMenu.classList.contains('active')) {
				mobileMenu.classList.remove('active');
				hamburgerToggle.setAttribute('aria-expanded', 'false');
				body.style.overflow = '';
			}
		});
	}
</script>
