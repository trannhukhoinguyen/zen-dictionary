---
export const prerender = false;

// if (Astro.response.headers) {
// 	Astro.response.headers.set("CDN-Cache-Control", "public, max-age=86400, s-maxage=2592000");
// }

import { type CollectionEntry } from "astro:content";
import { siteName, priceSteps, defaultPaginationSize } from "~/data/config";
import Layout from "~/layouts/Layout.astro";
import Section from "~/components/Section.astro";
import Container from "~/components/Container.astro";
import CardMaster from "~/components/master/CardMaster.astro";
import SidebarFilters from "~/components/sidebars/SidebarFilters.astro";
import Pagination from "~/components/Pagination.astro";
import SearchSort from "~/components/SearchSort.astro";
import PresetBar from "~/components/PresetBar.astro";
import FilterBarMobile from "~/components/FilterBarMobile.astro";

type Master = CollectionEntry<"masters">;

let APIURL = new URL("/api/getFilteredMasters.json", Astro.url);

const searchParamsValue = Astro.url.searchParams;
const searchParamsArray = Array.from(searchParamsValue);

// console.log(searchParamsValue);
// console.log(searchParamsArray);

APIURL.search = searchParamsValue.toString();

const response = await fetch(APIURL);
const responseData = response.status === 404 ? { allMasters: [] } : await response.json();
const allMasters: Master[] = responseData.allMasters;

const schools = [...new Set(allMasters.map((master: Master) => master.data.general.school))].sort();
const colors = [...new Set(allMasters.map((master: Master) => master.data.exterior.color))].sort();
const count = allMasters.length;

const sideBarData = {
	schools,
	colors,
	count,
	priceSteps,
};

const page = parseInt(searchParamsValue.get("page") || "1");
const pageSize = defaultPaginationSize;
const totalPages = Math.ceil(Array.isArray(allMasters) ? allMasters.length / pageSize : 0);
const paginatedMasters = Array.isArray(allMasters) ? allMasters.slice((page - 1) * pageSize, page * pageSize) : [];
---

<Layout pageTitle={`Masters | ${siteName}`} description="Explore our range of  for sale.">
	<Section class:list={"bg-gray-50 max-lg:max-w-svw max-lg:overflow-hidden"}>
		<Container class:list={"pt-0 max-lg:px-0 max-lg:max-w-full"}>
			<div class="flex flex-col lg:flex-row">
				<FilterBarMobile params={searchParamsArray} />

				<SidebarFilters data={sideBarData} />

				<main class="lg:pl-16 grow">
					<div class="lg:px-8">
						<SearchSort />

						<div class="max-lg:hidden">
							<PresetBar params={searchParamsArray} />
						</div>

						<ul class="grid grid-cols-1 lg:gap-16">
							{
								paginatedMasters.length > 0 ? (
									paginatedMasters.map((master) => <CardMaster master={master} />)
								) : (
									<li class="text-center text-gray-500">No results found</li>
								)
							}
						</ul>

						{
							paginatedMasters.length > 0 && totalPages > 1 && (
								<Pagination page={page} totalPages={totalPages} searchParams={searchParamsValue} />
							)
						}
					</div>
				</main>
			</div>
		</Container>
	</Section>
</Layout>

<script>
	document.addEventListener("astro:page-load", function () {
		const buttonModalFilterOpen = document.getElementById("button-modal-filter-open");
		const buttonModalFilterClose = document.getElementById("button-modal-filter-close");
		const sidebarFiltersMobile = document.getElementById("sidebar-filter");

		if (sidebarFiltersMobile) {
			buttonModalFilterOpen?.addEventListener("click", () => {
				sidebarFiltersMobile.classList.remove("max-lg:opacity-0", "max-lg:pointer-events-none");
			});

			buttonModalFilterClose?.addEventListener("click", () => {
				sidebarFiltersMobile.classList.add("max-lg:opacity-0", "max-lg:pointer-events-none");
			});
		}
	});
</script>
